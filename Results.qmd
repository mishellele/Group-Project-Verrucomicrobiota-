---
title: "Results"
code_folding: "hide"
---

### Loading Libraries and Data

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(knitr)
library(ggtree)
library(TDbook)
library(ggimage)
library(rphylopic)
library(treeio)
library(tidytree)
library(ape)
library(TreeTools)
library(phytools)
library(ggnewscale)
library(ggtreeExtra)
library(ggstar)
library(zoo)
```

```{r, warning=FALSE, message=FALSE}
NEON_MAGs <- read_csv("GOLD_Study_ID_Gs0161344_NEON_2024_4_21.csv") %>% 
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`, `Bin Lineage`)) %>% 
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "d__", "") %>%  
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "p__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "c__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "o__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "f__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "g__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "s__", "") %>%
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";", remove = FALSE) %>% 
  mutate_at("Domain", na_if,"") %>% 
  mutate_at("Phylum", na_if,"") %>% 
  mutate_at("Class", na_if,"") %>% 
  mutate_at("Order", na_if,"") %>% 
  mutate_at("Family", na_if,"") %>% 
  mutate_at("Genus", na_if,"") %>% 
  mutate_at("Species", na_if,"") %>% 

  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r, warning=FALSE, message=FALSE}
NEON_metagenomes <- read_tsv("exported_img_data_Gs0161344_NEON.tsv") %>% 
  select(-c(`Domain`, `Sequencing Status`, `Sequencing Center`)) %>% 
  rename(`Genome Name` = `Genome Name / Sample Name`) %>% 
  filter(str_detect(`Genome Name`, 're-annotation', negate = T)) %>% 
  filter(str_detect(`Genome Name`, 'WREF plot', negate = T))
```

```{r, warning=FALSE, message=FALSE}
NEON_metagenomes <- NEON_metagenomes %>% 
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r, warning=FALSE, message=FALSE}
NEON_chemistry <- read_tsv("rstudio-export/data/NEON/neon_plot_soilChem1_metadata.tsv") %>% 
  mutate_at("genomicsSampleID", str_replace, "-COMP", "") 
```

### Creating Data Frames/Preparing Data

#### NEON

```{r}
NEON_data <- NEON_MAGs %>% 
  left_join(NEON_metagenomes, by = "Sample Name") %>% 
  left_join(NEON_chemistry, by = c("Sample Name" = "genomicsSampleID")) %>% 
  rename("label" = "Bin ID")

NEON_data_Verruco <- NEON_data %>% 
 filter(str_detect(Phylum, "Verrucomicrobiota"))

NEON_data_NIWO <- NEON_data %>% 
  filter(str_detect(Site.x, "Niwot Ridge"))
```

#### Trees

```{r}
tree_arc <- read.tree("rstudio-export/data/NEON/gtdbtk.ar53.decorated.tree")
tree_bac <- read.tree("rstudio-export/data/NEON/gtdbtk.bac120.decorated.tree")
```

```{r}
node_vector_bac = c(tree_bac$tip.label,tree_bac$node.label)

grep("Verrucomicrobiota", node_vector_bac, value = TRUE)
match(grep("Verrucomicrobiota", node_vector_bac, value = TRUE), node_vector_bac)

```

```{r}
tree_bac_preorder <- Preorder(tree_bac)
tree_Verruco <- Subtree(tree_bac_preorder, 2563)
```

## Environmental Data

### Soil Data - Verrucomicrobiota vs. all MAGs

#### Verrucomicrobiota Soil Temperature Distribution

```{r, warning=FALSE, message=FALSE, fig_width=10}
NEON_data_Verruco %>% 
  ggplot(aes(x = soilTemp)) +
  geom_bar()+
  labs(title = "Distribution of MAGs based on soil temperature", y = "Verrucomicrobiota MAGs", x= "Soil Temperature")
```

#### Verrucomicrobiota Soil pH Distribution

```{r, warning=FALSE, message=FALSE, fig_width=10}
NEON_data_Verruco %>% 
  ggplot(aes(x = soilInWaterpH)) +
  geom_bar()+
  labs(title = "Distribution of MAGs based on soil pH", y = "Verrucomicrobiota MAGs", x= "Soil pH")

```

#### Total MAGs Soil Temperature

```{r, warning=FALSE, message=FALSE, fig_width=10}
NEON_data %>% 
  ggplot(aes(x = soilTemp, fill= Phylum)) +
  geom_bar()+
  labs(title = "Distribution of Total MAGs based on soil temperature", y = "MAGs", x= "Soil Temperature")
```

#### Total MAGs Soil pH

```{r, warning=FALSE, message=FALSE, fig_width=12, fig_height=6}
NEON_data %>% 
  ggplot(aes(x = soilInWaterpH, fill= Phylum)) +
  geom_bar()
  labs(title = "Distribution of Total MAGs based on soil in water pH", y = "MAGs", x= "Soil pH")
```

### Ecosystems - Verrucomicrobiota vs. all MAGs

#### Verrucomicrobiota Ecosystem Distribution

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Ecosystem Subtype`))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Ecosystem Subtypes", y="Count")
```

#### Verrucomicrobiota Ecosystem Distribution by Order

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x=`Ecosystem Subtype`, fill=Order))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Distribution by Ecosystem", y="Verrucomicrobiota MAGs")
```

### Verrucomicrobiota Ecosystem Subtypes by Site

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Ecosystem Subtype`, fill = `Site ID.x`))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Ecosystem Subtype", y="Count")
```

#### Total MAGs Ecosystem Distribution

```{r, fig.height= 5, fig.width= 10}
NEON_data %>% 
  ggplot(aes(x=`Ecosystem Subtype`, fill= Phylum))+
  geom_bar()+
  labs(title = "MAG Distribution by Ecosystem", y="MAGs")
```

#### Verrucomicrobiota and Ecosystem Subtype Phylogeny

```{r, fig.height=5, fig.width=7}
ggtree(tree_Verruco, layout="circular")  %<+%
  NEON_data + 
  geom_point2(mapping=aes(color=`Ecosystem Subtype`))+
  ggtitle("Verrucomicrobiota with Ecosystem Subtypes")
```

### Other Soil Properties - Verrucomicrobiota

#### Verrucomicrobiota Distribution and Nitrogen Content

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x= nitrogenPercent, fill=Order))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Distribution by Nitrogen Content", x="Nitrogen Percent", y="Verrucomicrobiota MAGs")
```

#### Verrucomicrobiota Distribution and Organic Carbon Content

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x= organicCPercent, fill=Order))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Distribution by Organic Carbon Content", x="Organic Carbon Percent", y="Verrucomicrobiota MAGs")
```

#### Verrucomicrobiota Distribution and Depth of Sample

```{r, warning=FALSE, message=FALSE}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Depth In Meters`, fill=Order))+
  geom_bar()+
  labs(title = "Verrucomicrobiota Distribution by Depth of Sample", x="Depth (meters)", y="Verrucomicrobiota MAGs")
```

### Site Data

#### Soil Temperature and Elevation at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  ggplot(aes(x=elevation, y=soilTemp))+
  geom_point()+
  labs(title = "Relationship between soil temperature and elevation at Niwot Ridge", y = "Soil Temperature", x= "Elevation (m)")
```

#### Soil Temperature and Elevation at all sites

```{r, warning=FALSE, message=FALSE}
NEON_data %>% 
  ggplot(aes(x=elevation, y=soilTemp))+
  geom_point()+
  labs(title = "Relationship between soil temperature and elevation at all sites", y = "Soil Temperature", x= "Elevation (m)")
```

#### Soil pH and Soil Temperature - All Sites

```{r, warning=FALSE, message=FALSE}
NEON_data %>% 
  ggplot(aes(x=soilTemp, y=soilInWaterpH, color = Phylum))+
  geom_point()+
  labs(title = "Relationship between temperature and pH", y = "Soil pH", x= "Soil Temperature")
```

#### Ecosystem Subtype and Soil Temperature

```{r, warning=FALSE, message=FALSE}
NEON_data %>% 
  ggplot(aes(x=`Ecosystem Subtype`, y=soilTemp))+
  geom_boxplot()+
  labs(title = "Ecosystem Subtype Temperature Distribution", y="Soil Temperature")
```

#### Habitat of each Phylum at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  ggplot(aes(x= `Habitat`, fill=Phylum))+
  geom_bar()+
  labs(title = "Habitat of Samples at NIWO", y="Count")
```

#### Mineral vs Organic Soil at Niwot Ridge

```{r}
NEON_data_NIWO%>%
  ggplot(aes(x = Layer.x))+
  geom_bar()+
  labs(title = "Abundance of Verrucomicrobiota in Mineral vs. Organic Soil")+
  labs(x = "Mineral vs. Organic Soil", y = "Verrucomicrobiota Count")
```

#### Elevation of Samples Found at Niwot Ridge

```{r, warning=FALSE, message=FALSE}
NEON_data_NIWO %>%   
ggplot(aes(x = `elevation`, y = `Sample Name`, color = `Phylum`)) +
  geom_point() +
  ggtitle("Elevation and Samples Found at NIWO")+
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))
```

## Genome/Assembly Data

### Sankey Plots

```{r, message=FALSE, warning=FALSE}
NEON_MAGs_test <- read_csv("rstudio-export/data/NEON/GOLD_Study_ID_Gs0161344_NEON_2024_4_21.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`, `Bin Lineage`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "d__", "") %>%  
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "p__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "c__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "o__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "f__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "g__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "s__", "") %>%
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";", remove = FALSE) %>% 
  mutate_at("Domain", na_if,"") %>% 
  mutate_at("Phylum", na_if,"") %>% 
  mutate_at("Class", na_if,"") %>% 
  mutate_at("Order", na_if,"") %>% 
  mutate_at("Family", na_if,"") %>% 
  mutate_at("Genus", na_if,"") %>% 
  mutate_at("Species", na_if,"") %>% 
  
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r}
NEON_MAGs_ind <- NEON_MAGs %>% 
  filter(`Assembly Type` == "Individual") 

NEON_MAGs_co <- NEON_MAGs %>% 
  filter(`Assembly Type` == "Combined") 
```

#### All Combined

```{r}
sankey_data2 <- NEON_MAGs_co %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";") 


sankey_data2[] <- t(apply(sankey_data2, 1, zoo::na.locf))


sankey_data2 <- sankey_data2 %>% 
    unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")


sankey_data_s <- sankey_data2
sankey_data_g <- sankey_data2
sankey_data_f <- sankey_data2
sankey_data_o <- sankey_data2
sankey_data_c <- sankey_data2
sankey_data_p <- sankey_data2
sankey_data_d <- sankey_data2

sankey_data_g$classification <- sub("\\|s__.*", "", sankey_data_g$classification)  
sankey_data_f$classification <- sub("\\|g__.*", "", sankey_data_f$classification)  
sankey_data_o$classification <- sub("\\|f__.*", "", sankey_data_o$classification)  
sankey_data_c$classification <- sub("\\|o__.*", "", sankey_data_c$classification)  
sankey_data_p$classification <- sub("\\|c__.*", "", sankey_data_p$classification)  
sankey_data_d$classification <- sub("\\|p__.*", "", sankey_data_d$classification)   

sankey_data_allTaxa <- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 

write_tsv(sankey_data_allTaxa, "rstudio-export/data/NEON/all_co_pavian.txt")
```

```{r}
knitr::include_url("images/sankey_all_co.txt.html")
```

#### All Individual

```{r}
sankey_data2 <- NEON_MAGs_ind %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";") 


sankey_data2[] <- t(apply(sankey_data2, 1, zoo::na.locf))


sankey_data2 <- sankey_data2 %>% 
    unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")


sankey_data_s <- sankey_data2
sankey_data_g <- sankey_data2
sankey_data_f <- sankey_data2
sankey_data_o <- sankey_data2
sankey_data_c <- sankey_data2
sankey_data_p <- sankey_data2
sankey_data_d <- sankey_data2

sankey_data_g$classification <- sub("\\|s__.*", "", sankey_data_g$classification)  
sankey_data_f$classification <- sub("\\|g__.*", "", sankey_data_f$classification)  
sankey_data_o$classification <- sub("\\|f__.*", "", sankey_data_o$classification)  
sankey_data_c$classification <- sub("\\|o__.*", "", sankey_data_c$classification)  
sankey_data_p$classification <- sub("\\|c__.*", "", sankey_data_p$classification)  
sankey_data_d$classification <- sub("\\|p__.*", "", sankey_data_d$classification)   

sankey_data_allTaxa <- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 

write_tsv(sankey_data_allTaxa, "rstudio-export/data/NEON/all_ind_pavian.txt")
```

```{r}
knitr::include_url("images/sankey_all_ind.txt.html")
```

#### Verrucomicrobiota Coassemblies

```{r}
sankey_data2 <- NEON_MAGs_co %>% 
  filter(Phylum == "Verrucomicrobiota") %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";") 


sankey_data2[] <- t(apply(sankey_data2, 1, zoo::na.locf))


sankey_data2 <- sankey_data2 %>% 
    unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")


sankey_data_s <- sankey_data2
sankey_data_g <- sankey_data2
sankey_data_f <- sankey_data2
sankey_data_o <- sankey_data2
sankey_data_c <- sankey_data2
sankey_data_p <- sankey_data2
sankey_data_d <- sankey_data2

sankey_data_g$classification <- sub("\\|s__.*", "", sankey_data_g$classification)  
sankey_data_f$classification <- sub("\\|g__.*", "", sankey_data_f$classification)  
sankey_data_o$classification <- sub("\\|f__.*", "", sankey_data_o$classification)  
sankey_data_c$classification <- sub("\\|o__.*", "", sankey_data_c$classification)  
sankey_data_p$classification <- sub("\\|c__.*", "", sankey_data_p$classification)  
sankey_data_d$classification <- sub("\\|p__.*", "", sankey_data_d$classification)   

sankey_data_allTaxa <- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 

write_tsv(sankey_data_allTaxa, "rstudio-export/data/NEON/verruco_co_pavian.txt")
```

```{r}
knitr::include_url("images/sankey_verruco_co.txt.html")
```

#### Verrucomicrobiota Individual

```{r}
sankey_data2 <- NEON_MAGs_ind %>% 
  filter(Phylum == "Verrucomicrobiota") %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";") 


sankey_data2[] <- t(apply(sankey_data2, 1, zoo::na.locf))


sankey_data2 <- sankey_data2 %>% 
    unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")


sankey_data_s <- sankey_data2
sankey_data_g <- sankey_data2
sankey_data_f <- sankey_data2
sankey_data_o <- sankey_data2
sankey_data_c <- sankey_data2
sankey_data_p <- sankey_data2
sankey_data_d <- sankey_data2

sankey_data_g$classification <- sub("\\|s__.*", "", sankey_data_g$classification)  
sankey_data_f$classification <- sub("\\|g__.*", "", sankey_data_f$classification)  
sankey_data_o$classification <- sub("\\|f__.*", "", sankey_data_o$classification)  
sankey_data_c$classification <- sub("\\|o__.*", "", sankey_data_c$classification)  
sankey_data_p$classification <- sub("\\|c__.*", "", sankey_data_p$classification)  
sankey_data_d$classification <- sub("\\|p__.*", "", sankey_data_d$classification)   

sankey_data_allTaxa <- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 

write_tsv(sankey_data_allTaxa, "rstudio-export/data/NEON/verruco_ind_pavian.txt")
```

```{r}
knitr::include_url("images/sankey_verruco_ind.txt.html")
```

#### Niwot Ridge Individual

```{r}
sankey_data2 <- NEON_MAGs_ind %>% 
  filter(`Site ID` == "NIWO") %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Archaea')) %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";") 


sankey_data2[] <- t(apply(sankey_data2, 1, zoo::na.locf))


sankey_data2 <- sankey_data2 %>% 
    unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")


sankey_data_s <- sankey_data2
sankey_data_g <- sankey_data2
sankey_data_f <- sankey_data2
sankey_data_o <- sankey_data2
sankey_data_c <- sankey_data2
sankey_data_p <- sankey_data2
sankey_data_d <- sankey_data2

sankey_data_g$classification <- sub("\\|s__.*", "", sankey_data_g$classification)  
sankey_data_f$classification <- sub("\\|g__.*", "", sankey_data_f$classification)  
sankey_data_o$classification <- sub("\\|f__.*", "", sankey_data_o$classification)  
sankey_data_c$classification <- sub("\\|o__.*", "", sankey_data_c$classification)  
sankey_data_p$classification <- sub("\\|c__.*", "", sankey_data_p$classification)  
sankey_data_d$classification <- sub("\\|p__.*", "", sankey_data_d$classification)   

sankey_data_allTaxa <- bind_rows(sankey_data_s, sankey_data_g, sankey_data_f, sankey_data_o, sankey_data_c, sankey_data_p, sankey_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 

write_tsv(sankey_data_allTaxa, "rstudio-export/data/NEON/niwot_ind_pavian.txt")
```

```{r}
knitr::include_url("images/sankey_niwot_ind.txt.html")
```

### Verrucomicrobiota Properties

#### Verrucomicrobiota Combined and Individual Assemblies

```{r, fig.height=5, fig.width=7}
ggtree(tree_Verruco, layout="circular")  %<+%
  NEON_data + 
  geom_point2(mapping=aes(color=`Assembly Type`))+
  ggtitle("Verrucomicrobiota Combined and Individual")
```

#### Verrucomicrobiota Genome size and Gene Count

```{r}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Total Number of Bases`, y= `Gene Count` ))+
  geom_point()+
  labs(title = "Verrucomicrobiota Genome Size vs. Gene Count")
```

#### Verrucomicrobiota Order Genome Size Distribution

```{r}
NEON_data_Verruco %>% 
  ggplot(aes(x= Order, y= `Total Number of Bases` ))+
  geom_boxplot()+
  labs(title = "Verrucomicrobiota Order Genome Size Distribution")
```

#### Histogram of Verrucomicrobiota Total Number of Bases

```{r}
NEON_data_Verruco %>% 
ggplot(aes(x = `Total Number of Bases`, color = Phylum)) +
  geom_histogram(bins = 50) 
```

#### Verrucomicrobiota Genus Genome Size Distribution

```{r, fig.width=10}
NEON_data_Verruco %>%
  ggplot(aes(x= Genus, y= `Total Number of Bases` ))+
  geom_boxplot()+
  labs(title = "Verrucomicrobiota Distribution with Total Number of Base")
```

#### Verrucomicrobiota Genera Gene Count Distribution

```{r, fig.width=10}
NEON_data_Verruco %>%
  ggplot(aes(x= Genus, y= `Gene Count` ))+
  geom_boxplot()+
  labs(title = "Verrucomicrobiota Genera Gene Count Distribution")
```

#### 16s rRNA Distribution by Genus

```{r, fig.width=12}
NEON_data_Verruco %>%
  ggplot(aes(x = Genus, y = `16s rRNA`, fill = Genus))+
  geom_boxplot()+
  labs(title = "16s rRNA Distribution by Genus")
```

#### Verrucomicrobiota Genera tRNA Distribution

```{r, fig.width=10}
NEON_data_Verruco %>%
  ggplot(aes(x= Genus, y= `tRNA Genes` ))+
  geom_boxplot()+
  labs(title = "Verrucomicrobiota Genera tRNA Distribution")
```

#### Novel Verrucomicrobiota by Order

```{r}
NEON_data_Verruco %>% 
  filter(is.na(Genus)) %>% 
  ggplot(aes(x= Order))+
  geom_bar()+
  labs(title = "Novel Verrucomicrobiota", y = "Novel Bacterial MAGs", x= "Order") +
  coord_flip()
```

#### Verrucomicrobiota Scaffold Count and Bin Completeness

```{r}
NEON_data_Verruco %>% 
  ggplot(aes(x = `Scaffold Count`, y = `Bin Completeness`)) +
  geom_point() +
  labs(title = "Verrucomicrobiota Scaffold Count and MAG Completeness",
       x = "Scaffold Count",
       y = "Bin Completeness")
```

#### Verrucomicrobiota Histogram of Total Number of Bases at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  filter(Phylum == "Verrucomicrobiota") %>%
ggplot(aes(x = `Total Number of Bases`, color = Phylum)) +
  geom_histogram(bins = 50) 
```

#### Verrucomicrobiota Total Number of Bases and Bin quality

```{r}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Bin Quality`, y= `Total Number of Bases`, color = Phylum))+
  geom_point()+
  labs(title = "Relationship between Total Number of Bases and Bin Quality for Verrucomicrobiota", y = "Total Number of Bases", x= "Bin Quality")
```

### Verrumicrobiota Gene Count and Scaffold Count at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  filter(Phylum == "Verrucomicrobiota") %>%
  ggplot(aes(x= `Scaffold Count`, y= `Total Number of Bases`, color = Phylum ))+
  geom_point()+
  labs(title = "Gene Count and Scaffold Count at NIWO")
```

### Verrucomicrobiota Scaffold Count and Total Number of Bases

```{r}
NEON_data_Verruco %>% 
  ggplot(aes(x= `Scaffold Count`, y= `Total Number of Bases`, color = Phylum ))+
  geom_point()+
  labs(title = "Gene Count and Scaffold Count")
```

### Niwot Ridge

#### Phyla at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  ggplot(aes(x = fct_infreq(Phylum), fill=Class))+
  geom_bar()+
  labs(title = "Phyla at Niwot Ridge", y = "MAGs", x= "Phylum", fill = "Class")+
  coord_flip()
```

#### Genome Size Distribution at Niwot Ridge boxplot

```{r, fig.width=12}
NEON_data_NIWO %>% 
  ggplot(aes(x= Phylum, y= `Total Number of Bases` ))+
  geom_boxplot()+
  labs(title = "Genome Size Distribution at Niwot Ridge")
```

#### Gene Count Distribution at Niwot Ridge

```{r, fig.width=12}
NEON_data_NIWO %>% 
  ggplot(aes(x= Phylum, y= `Gene Count`))+
  geom_boxplot()+
  labs(title = "Gene Count Distribution at Niwot Ridge")
```

#### tRNA Distribution at Niwot Ridge

```{r, fig.width=12}
NEON_data_NIWO %>% 
  ggplot(aes(x= Phylum, y= `tRNA Genes` ))+
  geom_boxplot()+
  labs(title = "tRNA Distribution at Niwot Ridge")
```

#### Novel Bacteria at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  filter(is.na(Genus)) %>% 
  ggplot(aes(x= Phylum))+
  geom_bar()+
  labs(title = "Phyla of Novel MAGs", y = "Novel Bacterial MAGs", x= "Phylum") +
  coord_flip()
```

#### nlcdclass of samples at Niwot Ridge

```{r}
ggplot(NEON_data_NIWO, aes(x = `nlcdClass`, y = `Sample Name`, color = Phylum)) +
  geom_point() +
  labs(title = "Relationship between nlcdclass and samples at NIWO",
       x = "Sample Name",
       y = "nlcdClass")
```

#### Histogram of Total Number of Bases at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
ggplot(aes(x = `Total Number of Bases`, color = Phylum)) +
  geom_histogram(bins = 50) 
```

#### Total Number of Bases and Bin quality at Niwot Ridge

```{r}
NEON_data_NIWO %>% 
  ggplot(aes(x= `Bin Quality`, y= `Total Number of Bases`, color = Phylum))+
  geom_point()+
  labs(title = "Relationship between Total Number of Bases and Bin Quality at NIWO", y = "Total Number of Bases", x= "Bin Quality")
```

### General NEON Properties

#### Total Number of Bases for all NEON samples

```{r}
NEON_data %>% 
  ggplot(aes(x= `Total Number of Bases`))+
  geom_histogram(bins = 50)+
  labs(title="Distribution of Total Number of Bases for all NEON samples", y="MAGs")
```

#### Novel Bacteria per Site

```{r}
NEON_data %>% 
  filter(is.na(Genus)) %>% 
ggplot(aes(x = Site.x))+
  geom_bar() +
  labs(title = "Novel Bacteria per Site", y = "Novel Genera", x= "Site")+
  coord_flip()
```

#### Phyla of Novel MAGs

```{r}
NEON_data %>% 
  filter(is.na(Genus)) %>% 
  ggplot(aes(x= Phylum))+
  geom_bar()+
  labs(title = "Phyla of Novel MAGs", y = "Novel Bacterial MAGs", x= "Phylum") +
  coord_flip()
```
